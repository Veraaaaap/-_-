<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CallAnalytics | Анализ звонков для Эрмитаж-Урал</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700&family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/l10n/ru.js"></script>
    <script src="https://cdn.sheetjs.com/xlsx-0.19.3/package/dist/xlsx.full.min.js"></script>
    <style>
        :root {
            --primary: #1e3a6e;
            --primary-light: #2a4a8a;
            --secondary: #c19a6b;
            --accent: #5a8fbb;
            --success: #2ecc71;
            --danger: #e74c3c;
            --warning: #f39c12;
            --dark: #0a1a35;
            --light: #f8f5f0;
            --gray: #7a7a7a;
            --light-gray: #e8e5e0;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Roboto', sans-serif;
        }

        body {
            background: var(--light);
            color: var(--dark);
            line-height: 1.6;
        }

        h1, h2, h3, h4, h5, h6 {
            font-family: 'Playfair Display', serif;
            font-weight: 600;
        }

        .container {
            width: 90%;
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 20px;
        }

        /* Шапка */
        header {
            padding: 15px 0;
            background: white;
            box-shadow: 0 2px 15px rgba(0, 0, 0, 0.08);
            position: sticky;
            top: 0;
            z-index: 1000;
            border-bottom: 3px solid var(--secondary);
        }

        .header-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            display: flex;
            align-items: center;
            text-decoration: none;
        }

        .logo-icon {
            width: 40px;
            height: 40px;
            background: var(--primary);
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 12px;
            color: white;
            font-size: 20px;
            font-weight: bold;
        }

        .logo-text {
            font-size: 22px;
            font-weight: 700;
            color: var(--primary);
            font-family: 'Playfair Display', serif;
        }

        .logo-text span {
            color: var(--secondary);
        }

        nav {
            display: flex;
            align-items: center;
        }

        .nav-link {
            margin-left: 30px;
            text-decoration: none;
            color: var(--primary);
            font-weight: 500;
            font-size: 16px;
            transition: all 0.3s;
            position: relative;
        }

        .nav-link:hover {
            color: var(--secondary);
        }

        .nav-link.active {
            color: var(--secondary);
            font-weight: 600;
        }

        .nav-link.active::after {
            content: '';
            position: absolute;
            bottom: -5px;
            left: 0;
            width: 100%;
            height: 2px;
            background: var(--secondary);
        }

        .btn {
            padding: 12px 24px;
            border-radius: 6px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
            border: none;
            font-size: 16px;
            display: inline-flex;
            align-items: center;
        }

        .btn-primary {
            background: var(--primary);
            color: white;
        }

        .btn-primary:hover {
            background: var(--primary-light);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(30, 58, 110, 0.3);
        }

        .btn-secondary {
            background: white;
            color: var(--primary);
            border: 2px solid var(--primary);
        }

        .btn-secondary:hover {
            background: var(--primary);
            color: white;
        }

        .btn i {
            margin-left: 8px;
        }

        /* Hero секция */
        .hero {
            padding: 100px 0;
            background: linear-gradient(rgba(248, 245, 240, 0.9), rgba(248, 245, 240, 0.9)), 
                        url('https://ermitage-ural.ru/upload/iblock/9b3/9b3c5d3c6b4c6a8e6e4f6b0e6e4f6b0e.jpg') no-repeat center center;
            background-size: cover;
            position: relative;
            overflow: hidden;
            text-align: center;
        }

        .hero::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(30, 58, 110, 0.1);
            z-index: 0;
        }

        .hero-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            position: relative;
            z-index: 1;
        }

        .hero-content {
            max-width: 800px;
            background: rgba(255, 255, 255, 0.9);
            padding: 40px;
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(193, 154, 107, 0.3);
        }

        .hero-title {
            font-size: 42px;
            margin-bottom: 20px;
            color: var(--primary);
            line-height: 1.2;
        }

        .hero-title span {
            color: var(--secondary);
        }

        .hero-subtitle {
            font-size: 18px;
            color: var(--primary-light);
            margin-bottom: 30px;
        }

        .hero-buttons {
            display: flex;
            gap: 20px;
            justify-content: center;
        }

        .museum-badge {
            display: inline-block;
            background: var(--secondary);
            color: white;
            padding: 8px 20px;
            border-radius: 30px;
            font-weight: 600;
            margin-bottom: 20px;
            font-size: 14px;
        }

        /* Статистика */
        .stats {
            padding: 80px 0;
            background: white;
        }

        .section-title {
            text-align: center;
            font-size: 36px;
            margin-bottom: 60px;
            position: relative;
        }

        .section-title::after {
            content: '';
            position: absolute;
            bottom: -15px;
            left: 50%;
            transform: translateX(-50%);
            width: 80px;
            height: 4px;
            background: var(--secondary);
        }

        .stats-container {
            background: white;
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
            padding: 50px;
            border: 1px solid rgba(193, 154, 107, 0.2);
        }

        .stats-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 40px;
            flex-wrap: wrap;
            gap: 20px;
        }

        .stats-title {
            font-size: 28px;
            color: var(--primary);
        }

        .stats-period {
            display: flex;
            align-items: center;
            gap: 15px;
            flex-wrap: wrap;
        }

        .period-selector {
            padding: 10px 15px;
            border-radius: 6px;
            border: 1px solid #ddd;
            background: white;
            font-weight: 500;
            cursor: pointer;
        }

        /* Расширенная статистика */
        .advanced-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 40px;
        }

        .stat-card {
            background: white;
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            border: 1px solid rgba(193, 154, 107, 0.1);
            transition: all 0.3s;
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            border-color: var(--secondary);
        }

        .stat-value {
            font-size: 36px;
            font-weight: 700;
            margin-bottom: 5px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .stat-value.incoming {
            color: var(--success);
        }

        .stat-value.outgoing {
            color: var(--accent);
        }

        .stat-value.missed {
            color: var(--danger);
        }

        .stat-label {
            color: var(--gray);
            font-size: 16px;
        }

        .stat-change {
            font-size: 14px;
            margin-top: 5px;
            display: flex;
            align-items: center;
        }

        .stat-change.positive {
            color: var(--success);
        }

        .stat-change.negative {
            color: var(--danger);
        }

        .stat-change i {
            margin-right: 5px;
        }

        /* Графики */
        .charts-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin-bottom: 40px;
        }

        @media (max-width: 992px) {
            .charts-grid {
                grid-template-columns: 1fr;
            }
        }

        .chart-container {
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            border: 1px solid rgba(193, 154, 107, 0.1);
            position: relative;
        }

        .chart-title {
            font-size: 20px;
            margin-bottom: 20px;
            color: var(--primary);
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .chart-title i {
            color: var(--secondary);
        }

        .chart-wrapper {
            height: 300px;
            position: relative;
        }

        /* Таблица звонков */
        .calls-table-container {
            margin-top: 40px;
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            overflow-x: auto;
            border: 1px solid rgba(193, 154, 107, 0.1);
        }

        .table-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            flex-wrap: wrap;
            gap: 15px;
        }

        .table-title {
            font-size: 20px;
            font-weight: 600;
            color: var(--primary);
        }

        .table-actions {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }

        .table-btn {
            padding: 8px 15px;
            background: white;
            border: 1px solid #ddd;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 5px;
            transition: all 0.3s;
        }

        .table-btn:hover {
            background: var(--primary);
            color: white;
            border-color: var(--primary);
        }

        .table-btn i {
            font-size: 14px;
        }

        .calls-table {
            width: 100%;
            border-collapse: collapse;
            font-size: 14px;
        }

        .calls-table th {
            background: var(--primary);
            color: white;
            padding: 12px 15px;
            text-align: left;
            font-weight: 500;
            position: sticky;
            top: 0;
        }

        .calls-table td {
            padding: 12px 15px;
            border-bottom: 1px solid #eee;
            color: var(--primary-light);
        }

        .calls-table tr:hover {
            background: rgba(30, 58, 110, 0.05);
        }

        .call-type {
            display: inline-block;
            padding: 4px 10px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: 500;
        }

        .call-type.incoming {
            background: rgba(46, 204, 113, 0.1);
            color: var(--success);
        }

        .call-type.outgoing {
            background: rgba(52, 152, 219, 0.1);
            color: var(--accent);
        }

        .call-status {
            display: inline-block;
            padding: 4px 10px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: 500;
        }

        .call-status.answered {
            background: rgba(46, 204, 113, 0.1);
            color: var(--success);
        }

        .call-status.missed {
            background: rgba(231, 76, 60, 0.1);
            color: var(--danger);
        }

        /* Календарь */
        .date-range-container {
            display: flex;
            align-items: center;
            gap: 10px;
            position: relative;
        }
        
        .date-range-input {
            padding: 10px 15px;
            border-radius: 6px;
            border: 1px solid #ddd;
            background: white;
            font-weight: 500;
            cursor: pointer;
            width: 180px;
            transition: all 0.3s;
            background-image: url('data:image/svg+xml;utf8,<svg fill="%231e3a6e" height="16" width="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM9 10H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm-8 4H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2z"/></svg>');
            background-repeat: no-repeat;
            background-position: right 12px center;
            background-size: 16px;
            padding-right: 35px;
        }
        
        .date-range-input:hover {
            border-color: var(--secondary);
        }
        
        .date-range-input:focus {
            outline: none;
            border-color: var(--secondary);
            box-shadow: 0 0 0 2px rgba(193, 154, 107, 0.2);
        }
        
        .date-range-separator {
            color: var(--gray);
            font-weight: 500;
        }

        /* Футер */
        footer {
            background: var(--primary);
            color: white;
            padding-top: 80px;
            background-image: linear-gradient(rgba(30, 58, 110, 0.9), rgba(30, 58, 110, 0.9)), 
                            url('https://ermitage-ural.ru/local/templates/main/assets/images/footer-bg.png');
            background-repeat: no-repeat;
            background-position: bottom right;
            background-size: cover;
            position: relative;
        }

        .footer-content {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 40px;
            margin-bottom: 50px;
            position: relative;
            z-index: 1;
        }

        .footer-column h3 {
            font-size: 22px;
            margin-bottom: 25px;
            position: relative;
            color: var(--secondary);
            font-family: 'Playfair Display', serif;
        }

        .footer-column h3::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 0;
            width: 50px;
            height: 3px;
            background: var(--secondary);
        }

        .footer-about p {
            color: rgba(255, 255, 255, 0.8);
            margin-bottom: 20px;
            line-height: 1.6;
            font-size: 15px;
        }

        .social-links {
            display: flex;
            gap: 15px;
            margin-top: 20px;
        }

        .social-link {
            width: 42px;
            height: 42px;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.1);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            transition: all 0.3s;
            font-size: 18px;
        }

        .social-link:hover {
            background: var(--secondary);
            transform: translateY(-3px) scale(1.1);
        }

        .footer-links {
            list-style: none;
            padding: 0;
        }

        .footer-links li {
            margin-bottom: 15px;
            transition: transform 0.3s;
        }

        .footer-links li:hover {
            transform: translateX(5px);
        }

        .footer-links a {
            color: rgba(255, 255, 255, 0.8);
            text-decoration: none;
            transition: all 0.3s;
            display: flex;
            align-items: center;
            gap: 12px;
            font-size: 15px;
        }

        .footer-links a:hover {
            color: var(--secondary);
        }

        .footer-links a i {
            color: var(--secondary);
            font-size: 14px;
            transition: transform 0.3s;
        }

        .footer-links a:hover i {
            transform: translateX(3px);
        }

        .footer-contact p {
            display: flex;
            align-items: flex-start;
            gap: 12px;
            color: rgba(255, 255, 255, 0.8);
            margin-bottom: 18px;
            font-size: 15px;
            line-height: 1.5;
        }

        .footer-contact i {
            color: var(--secondary);
            font-size: 16px;
            margin-top: 3px;
            flex-shrink: 0;
        }

        .footer-bottom {
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            padding: 25px 0;
            text-align: center;
            color: rgba(255, 255, 255, 0.6);
            font-size: 14px;
            position: relative;
            z-index: 1;
        }

        .footer-bottom a {
            color: var(--secondary);
            text-decoration: none;
            transition: all 0.3s;
        }

        .footer-bottom a:hover {
            text-decoration: underline;
        }

        /* Анимации */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .fade-in {
            animation: fadeIn 0.6s ease-out forwards;
        }

        .delay-1 { animation-delay: 0.2s; }
        .delay-2 { animation-delay: 0.4s; }
        .delay-3 { animation-delay: 0.6s; }

        /* Адаптивность */
        @media (max-width: 768px) {
            .header-container {
                flex-direction: column;
                gap: 20px;
            }
            
            nav {
                width: 100%;
                justify-content: center;
                flex-wrap: wrap;
            }
            
            .nav-link {
                margin: 0 15px 10px;
            }
            
            .hero-title {
                font-size: 32px;
            }
            
            .hero-buttons {
                flex-direction: column;
                gap: 15px;
            }
            
            .btn {
                width: 100%;
                justify-content: center;
            }
            
            .section-title {
                font-size: 30px;
            }
            
            .stats-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 20px;
            }

            .date-range-container {
                flex-direction: column;
                align-items: flex-start;
                width: 100%;
            }

            .date-range-input {
                width: 100%;
            }
        }

        @media (max-width: 576px) {
            .nav-link {
                margin: 0 10px 10px;
                font-size: 14px;
            }
            
            .hero-title {
                font-size: 28px;
            }
            
            .hero-content {
                padding: 30px 20px;
            }
            
            .section-title {
                font-size: 26px;
            }
            
            .stats-container {
                padding: 30px 20px;
            }

            .stat-card {
                padding: 20px 15px;
            }

            .stat-value {
                font-size: 28px;
            }
        }
/* Добавьте этот стиль в раздел style */
        .reports-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 30px;
            margin-top: 40px;
        }
        
        .report-card {
            background: white;
            border-radius: 10px;
            padding: 25px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            border: 1px solid rgba(193, 154, 107, 0.1);
            transition: all 0.3s;
        }
        
        .report-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            border-color: var(--secondary);
        }
        
        .report-title {
            font-size: 20px;
            margin-bottom: 15px;
            color: var(--primary);
        }
        
        .report-description {
            color: var(--gray);
            margin-bottom: 20px;
            font-size: 15px;
        }
        
        .report-period {
            font-size: 14px;
            color: var(--secondary);
            margin-bottom: 15px;
            font-weight: 500;
        }
    </style>
</head>
<body>
    <!-- Шапка -->
    <header>
        <div class="container header-container">
            <a href="#" class="logo">
                <div class="logo-icon">
                    <i class="fas fa-phone-alt"></i>
                </div>
                <div class="logo-text">Эрмитаж-<span>Урал</span> Analytics</div>
            </a>
            <nav>
                <a href="#stats" class="nav-link active">Статистика</a>
                <a href="#calls" class="nav-link">Звонки</a>
                <a href="reports.html" class="nav-link">Отчеты</a>
                <a href="https://i-z-o.art/constitutor/centr-ermitazh-ural/" class="nav-link" target="_blank">О музее</a>
            </nav>
        </div>
    </header>

    <!-- Статистика -->
    <section class="stats" id="stats">
        <div class="container">
            <h2 class="section-title">Анализ телефонных звонков</h2>
            <div class="stats-container">
                <div class="stats-header">
                    <h2 class="stats-title">Детальная статистика звонков</h2>
                    <div class="stats-period">
                        <div class="date-range-container">
                            <input type="text" class="date-range-input" id="startDate" placeholder="Начальная дата">
                            <span class="date-range-separator">—</span>
                            <input type="text" class="date-range-input" id="endDate" placeholder="Конечная дата">
                        </div>
                        <button class="btn btn-primary" id="applyDateBtn">Применить</button>
                    </div>
                </div>

                <!-- Расширенная статистика -->
                <div class="advanced-stats">
                    <div class="stat-card">
                        <div class="stat-value incoming" id="totalCalls">0</div>
                        <div class="stat-label">Всего звонков</div>
                        <div class="stat-change positive">
                            <i class="fas fa-arrow-up"></i> 12% за неделю
                        </div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value incoming" id="incomingCalls">0</div>
                        <div class="stat-label">Входящие звонки</div>
                        <div class="stat-change positive">
                            <i class="fas fa-arrow-up"></i> 8% за неделю
                        </div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value outgoing" id="outgoingCalls">0</div>
                        <div class="stat-label">Исходящие звонки</div>
                        <div class="stat-change negative">
                            <i class="fas fa-arrow-down"></i> 3% за неделю
                        </div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value" id="avgDuration">0:00</div>
                        <div class="stat-label">Средняя длительность</div>
                        <div class="stat-change positive">
                            <i class="fas fa-arrow-up"></i> 15% за неделю
                        </div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value" id="conversion">0%</div>
                        <div class="stat-label">Конверсия ответов</div>
                        <div class="stat-change positive">
                            <i class="fas fa-arrow-up"></i> 5% за неделю
                        </div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value missed" id="missedCalls">0</div>
                        <div class="stat-label">Пропущенные звонки</div>
                        <div class="stat-change negative">
                            <i class="fas fa-arrow-down"></i> 2% за неделю
                        </div>
                    </div>
                </div>

                <!-- Графики -->
                <div class="charts-grid">
                    <div class="chart-container">
                        <div class="chart-title">
                            <i class="fas fa-chart-line"></i> Звонки по дням недели
                        </div>
                        <div class="chart-wrapper">
                            <canvas id="dailyChart"></canvas>
                        </div>
                    </div>
                    <div class="chart-container">
                        <div class="chart-title">
                            <i class="fas fa-chart-pie"></i> Распределение по отделам
                        </div>
                        <div class="chart-wrapper">
                            <canvas id="departmentsChart"></canvas>
                        </div>
                    </div>
                    <div class="chart-container">
                        <div class="chart-title">
                            <i class="fas fa-clock"></i> Звонки по времени суток
                        </div>
                        <div class="chart-wrapper">
                            <canvas id="timeChart"></canvas>
                        </div>
                    </div>
                    <div class="chart-container">
                        <div class="chart-title">
                            <i class="fas fa-user-clock"></i> Время ответа сотрудников
                        </div>
                        <div class="chart-wrapper">
                            <canvas id="responseChart"></canvas>
                        </div>
                    </div>
                </div>

                <!-- Таблица звонков -->
                <div class="calls-table-container" id="calls">
                    <div class="table-header">
                        <h3 class="table-title">Детализация звонков</h3>
                        <div class="table-actions">
                            <select class="table-btn" id="typeFilter">
                                <option value="all">Все типы</option>
                                <option value="incoming">Входящие</option>
                                <option value="outgoing">Исходящие</option>
                            </select>
                            <select class="table-btn" id="statusFilter">
                                <option value="all">Все статусы</option>
                                <option value="answered">Обработан</option>
                                <option value="missed">Пропущен</option>
                            </select>
                            <select class="table-btn" id="departmentFilter">
                                <option value="all">Все отделы</option>
                                <option value="Экскурсии">Экскурсии</option>
                                <option value="Касса">Касса</option>
                                <option value="Администрация">Администрация</option>
                                <option value="Мероприятия">Мероприятия</option>
                            </select>
                            <button class="table-btn" id="exportTableBtn"><i class="fas fa-download"></i> Экспорт</button>
                        </div>
                    </div>
                    <table class="calls-table">
                        <thead>
                            <tr>
                                <th>Дата</th>
                                <th>Время</th>
                                <th>Номер</th>
                                <th>Длительность</th>
                                <th>Тип</th>
                                <th>Отдел</th>
                                <th>Сотрудник</th>
                                <th>Статус</th>
                                <th>Тема</th>
                                <th>Время ответа</th>
                            </tr>
                        </thead>
                        <tbody id="callsData">
                            <!-- Данные будут добавлены через JavaScript -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </section>

    <!-- Футер -->
    <footer>
        <div class="container">
            <div class="footer-content">
                <div class="footer-column">
                    <h3>О системе</h3>
                    <div class="footer-about">
                        <p>Профессиональное решение для анализа телефонных звонков музея "Эрмитаж-Урал". Помогаем улучшать качество обслуживания посетителей и оптимизировать работу сотрудников.</p>
                        <div class="social-links">
                            <a href="https://t.me/ermitage_ural" class="social-link" target="_blank"><i class="fab fa-telegram"></i></a>
                            <a href="https://vk.com/ermitage.ural" class="social-link" target="_blank"><i class="fab fa-vk"></i></a>
                            <a href="https://www.youtube.com/channel/UC..." class="social-link" target="_blank"><i class="fab fa-youtube"></i></a>
                        </div>
                    </div>
                </div>
                <div class="footer-column">
                    <h3>Разделы</h3>
                    <ul class="footer-links">
                        <li><a href="#stats"><i class="fas fa-chevron-right"></i> Статистика</a></li>
                        <li><a href="#calls"><i class="fas fa-chevron-right"></i> Детализация звонков</a></li>
                        <li><a href="#reports"><i class="fas fa-chevron-right"></i> Отчеты</a></li>
                        <li><a href="#analytics"><i class="fas fa-chevron-right"></i> Аналитика</a></li>
                    </ul>
                </div>
                <div class="footer-column">
                    <h3>Ресурсы</h3>
                    <ul class="footer-links">
                        <li><a href="https://i-z-o.art/constitutor/centr-ermitazh-ural/" target="_blank"><i class="fas fa-chevron-right"></i> Официальный сайт музея</a></li>
                        <li><a href="#"><i class="fas fa-chevron-right"></i> Руководство пользователя</a></li>
                        <li><a href="#"><i class="fas fa-chevron-right"></i> API для разработчиков</a></li>
                        <li><a href="#"><i class="fas fa-chevron-right"></i> Частые вопросы</a></li>
                    </ul>
                </div>
                <div class="footer-column">
                    <h3>Контакты</h3>
                    <div class="footer-contact">
                        <p><i class="fas fa-map-marker-alt"></i> г. Екатеринбург, ул. Вайнера, 11</p>
                        <p><i class="fas fa-phone-alt"></i> +7 (343) 376-47-95</p>
                        <p><i class="fas fa-envelope"></i> analytics@ermitage-ural.ru</p>
                        <p><i class="fas fa-clock"></i> Пн-Пт: 9:00 - 18:00</p>
                    </div>
                </div>
            </div>
            <div class="footer-bottom">
                <p>&copy; 2025 CallAnalytics для Эрмитаж-Урал. Все права защищены.</p>
            </div>
        </div>
    </footer>

  <script>
    // Глобальные переменные
    let mockCalls = [];
    let currentFilters = {
        type: 'all',
        status: 'all',
        department: 'all'
    };
    let charts = {}; // Объект для хранения экземпляров графиков

    // Инициализация при загрузке страницы
    document.addEventListener('DOMContentLoaded', () => {
        // Генерация тестовых данных
        mockCalls = generateMockCalls();
        populateCallsTable(mockCalls);
        
        // Инициализация календаря
        initDatePickers();
        
        // Назначение обработчиков событий
        setupEventListeners();
    });

    // Инициализация datepicker
    function initDatePickers() {
        flatpickr.localize(flatpickr.l10ns.ru);
        
        flatpickr("#startDate", {
            dateFormat: "d.m.Y",
            defaultDate: "01.01.2023",
            maxDate: "today"
        });
        
        flatpickr("#endDate", {
            dateFormat: "d.m.Y",
            defaultDate: "today",
            maxDate: "today"
        });
    }

    // Настройка обработчиков событий
    function setupEventListeners() {
        document.getElementById('applyDateBtn').addEventListener('click', applyDateFilter);
        document.getElementById('typeFilter').addEventListener('change', (e) => {
            currentFilters.type = e.target.value;
            applyFilters();
        });
        document.getElementById('statusFilter').addEventListener('change', (e) => {
            currentFilters.status = e.target.value;
            applyFilters();
        });
        document.getElementById('departmentFilter').addEventListener('change', (e) => {
            currentFilters.department = e.target.value;
            applyFilters();
        });
        document.getElementById('exportTableBtn').addEventListener('click', exportToExcel);
        document.getElementById('loginBtn').addEventListener('click', () => {
            alert('Функция входа будет реализована в полной версии');
        });
    }

    // Генерация тестовых данных для таблицы
    function generateMockCalls() {
        const departments = ['Экскурсии', 'Касса', 'Администрация', 'Мероприятия'];
        const employees = ['Иванова А.П.', 'Петров С.И.', 'Сидорова М.В.', 'Кузнецов Д.А.', 'Смирнова Е.Л.'];
        const topics = ['Запись на экскурсию', 'Вопрос о выставке', 'Корпоративное мероприятие', 
                       'Работа кассы', 'Общий вопрос', 'Бронирование', 'Сотрудничество'];
        
        const calls = [];
        const today = new Date();

        for (let i = 0; i < 50; i++) {
            const callDate = new Date();
            callDate.setDate(today.getDate() - Math.floor(Math.random() * 30));
            const callTime = `${Math.floor(Math.random() * 24).toString().padStart(2, '0')}:${Math.floor(Math.random() * 60).toString().padStart(2, '0')}`;
            const duration = Math.floor(Math.random() * 600);
            const durationFormatted = `${Math.floor(duration / 60)}:${(duration % 60).toString().padStart(2, '0')}`;
            const type = Math.random() > 0.3 ? 'incoming' : 'outgoing';
            const department = departments[Math.floor(Math.random() * departments.length)];
            const employee = employees[Math.floor(Math.random() * employees.length)];
            const status = type === 'outgoing' ? 'answered' : (Math.random() > 0.2 ? 'answered' : 'missed');
            const topic = topics[Math.floor(Math.random() * topics.length)];
            const responseTime = status === 'answered' ? Math.floor(Math.random() * 30) : 0;
            
            calls.push({
                date: callDate.toLocaleDateString('ru-RU'),
                time: callTime,
                number: `+7 (9${Math.floor(Math.random() * 90 + 10)}) ${Math.floor(Math.random() * 900 + 100)}-${Math.floor(Math.random() * 90 + 10)}-${Math.floor(Math.random() * 90 + 10)}`,
                duration: durationFormatted,
                type,
                department,
                employee,
                status,
                topic,
                responseTime: responseTime > 0 ? `${responseTime} сек` : '-'
            });
        }
        
        return calls;
    }

    // Заполнение таблицы данными
    function populateCallsTable(calls) {
        const tableBody = document.getElementById('callsData');
        tableBody.innerHTML = '';
        
        calls.forEach(call => {
            const row = document.createElement('tr');
            
            row.innerHTML = `
                <td>${call.date}</td>
                <td>${call.time}</td>
                <td>${call.number}</td>
                <td>${call.duration}</td>
                <td><span class="call-type ${call.type}">${call.type === 'incoming' ? 'Входящий' : 'Исходящий'}</span></td>
                <td>${call.department}</td>
                <td>${call.employee}</td>
                <td><span class="call-status ${call.status}">${call.status === 'answered' ? 'Обработан' : 'Пропущен'}</span></td>
                <td>${call.topic}</td>
                <td>${call.responseTime}</td>
            `;
            
            tableBody.appendChild(row);
        });
        
        // Обновление статистики и графиков
        updateStats(calls);
    }

    // Применение фильтров даты
    function applyDateFilter() {
        // В реальном приложении здесь бы загружались данные за выбранный период
        alert('В реальном приложении здесь бы загружались данные за выбранный период');
        applyFilters();
    }

    // Применение всех фильтров
    function applyFilters() {
        const filteredCalls = mockCalls.filter(call => {
            return (currentFilters.type === 'all' || call.type === currentFilters.type) &&
                   (currentFilters.status === 'all' || call.status === currentFilters.status) &&
                   (currentFilters.department === 'all' || call.department === currentFilters.department);
        });
        
        populateCallsTable(filteredCalls);
    }

    // Экспорт таблицы в Excel
    function exportToExcel() {
        const filteredCalls = mockCalls.filter(call => {
            return (currentFilters.type === 'all' || call.type === currentFilters.type) &&
                   (currentFilters.status === 'all' || call.status === currentFilters.status) &&
                   (currentFilters.department === 'all' || call.department === currentFilters.department);
        });

        const data = filteredCalls.map(call => ({
            "Дата": call.date,
            "Время": call.time,
            "Номер": call.number,
            "Длительность": call.duration,
            "Тип": call.type === 'incoming' ? 'Входящий' : 'Исходящий',
            "Отдел": call.department,
            "Сотрудник": call.employee,
            "Статус": call.status === 'answered' ? 'Обработан' : 'Пропущен',
            "Тема": call.topic,
            "Время ответа": call.responseTime
        }));
        
        const wb = XLSX.utils.book_new();
        const ws = XLSX.utils.json_to_sheet(data);
        XLSX.utils.book_append_sheet(wb, ws, "Звонки");
        XLSX.writeFile(wb, `Звонки_Эрмитаж-Урал_${new Date().toLocaleDateString('ru-RU')}.xlsx`);
    }

    // Обновление статистики на основе данных
    function updateStats(calls) {
        // Общее количество звонков
        document.getElementById('totalCalls').textContent = calls.length;
        
        // Входящие звонки
        const incoming = calls.filter(call => call.type === 'incoming').length;
        document.getElementById('incomingCalls').textContent = incoming;
        
        // Исходящие звонки
        const outgoing = calls.filter(call => call.type === 'outgoing').length;
        document.getElementById('outgoingCalls').textContent = outgoing;
        
        // Пропущенные звонки
        const missed = calls.filter(call => call.status === 'missed').length;
        document.getElementById('missedCalls').textContent = missed;
        
        // Средняя длительность
        const totalDuration = calls.reduce((sum, call) => {
            const [mins, secs] = call.duration.split(':').map(Number);
            return sum + mins * 60 + secs;
        }, 0);
        const avgDuration = calls.length > 0 ? totalDuration / calls.length : 0;
        
        document.getElementById('avgDuration').textContent = 
            `${Math.floor(avgDuration / 60)}:${Math.floor(avgDuration % 60).toString().padStart(2, '0')}`;
        
        // Конверсия ответов
        const conversion = incoming > 0 ? Math.round((incoming - missed) / incoming * 100) : 0;
        document.getElementById('conversion').textContent = `${conversion}%`;
        
        // Инициализация графиков
        initCharts(calls);
    }

    // Инициализация графиков
    function initCharts(calls) {
        // Уничтожаем старые графики, если они есть
        destroyCharts();
        
        // График звонков по дням недели
        createDailyChart(calls);
        
        // График распределения по отделам
        createDepartmentsChart(calls);
        
        // График звонков по времени суток
        createTimeChart(calls);
        
        // График времени ответа сотрудников
        createResponseChart(calls);
    }

    // Уничтожение старых графиков
    function destroyCharts() {
        Object.values(charts).forEach(chart => {
            if (chart) chart.destroy();
        });
        charts = {};
    }

    // Создание графика по дням недели
    function createDailyChart(calls) {
        const days = ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'];
        const dailyData = Array(7).fill(0);
        
        calls.forEach(call => {
            const date = new Date(call.date.split('.').reverse().join('-'));
            const day = date.getDay(); // 0 - воскресенье, 1 - понедельник и т.д.
            dailyData[(day + 6) % 7]++; // Преобразуем к нашему формату (0 - понедельник)
        });
        
        const ctx = document.getElementById('dailyChart').getContext('2d');
        charts.dailyChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: days,
                datasets: [{
                    label: 'Количество звонков',
                    data: dailyData,
                    backgroundColor: 'rgba(30, 58, 110, 0.7)',
                    borderColor: 'rgba(30, 58, 110, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }

    // Создание графика распределения по отделам
    function createDepartmentsChart(calls) {
        const departments = {};
        calls.forEach(call => {
            departments[call.department] = (departments[call.department] || 0) + 1;
        });
        
        const ctx = document.getElementById('departmentsChart').getContext('2d');
        charts.departmentsChart = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: Object.keys(departments),
                datasets: [{
                    data: Object.values(departments),
                    backgroundColor: [
                        'rgba(46, 204, 113, 0.7)',
                        'rgba(52, 152, 219, 0.7)',
                        'rgba(155, 89, 182, 0.7)',
                        'rgba(241, 196, 15, 0.7)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'right'
                    }
                }
            }
        });
    }

    // Создание графика звонков по времени суток
    function createTimeChart(calls) {
        const hours = Array(24).fill().map((_, i) => i);
        const hourlyData = Array(24).fill(0);
        
        calls.forEach(call => {
            const hour = parseInt(call.time.split(':')[0]);
            hourlyData[hour]++;
        });
        
        const ctx = document.getElementById('timeChart').getContext('2d');
        charts.timeChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: hours.map(h => `${h}:00`),
                datasets: [{
                    label: 'Звонки по часам',
                    data: hourlyData,
                    backgroundColor: 'rgba(193, 154, 107, 0.2)',
                    borderColor: 'rgba(193, 154, 107, 1)',
                    borderWidth: 2,
                    tension: 0.3,
                    fill: true
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }

    // Создание графика времени ответа
    function createResponseChart(calls) {
        const answeredCalls = calls.filter(call => call.status === 'answered' && call.type === 'incoming');
        const responseTimes = answeredCalls.map(call => parseInt(call.responseTime));
        
        const ctx = document.getElementById('responseChart').getContext('2d');
        charts.responseChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['0-5 сек', '6-10 сек', '11-15 сек', '16-20 сек', '21-25 сек', '26-30 сек'],
                datasets: [{
                    label: 'Время ответа',
                    data: [
                        responseTimes.filter(t => t <= 5).length,
                        responseTimes.filter(t => t > 5 && t <= 10).length,
                        responseTimes.filter(t => t > 10 && t <= 15).length,
                        responseTimes.filter(t => t > 15 && t <= 20).length,
                        responseTimes.filter(t => t > 20 && t <= 25).length,
                        responseTimes.filter(t => t > 25 && t <= 30).length
                    ],
                    backgroundColor: 'rgba(30, 58, 110, 0.7)',
                    borderColor: 'rgba(30, 58, 110, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }
</script>
 </body>
         </html>
